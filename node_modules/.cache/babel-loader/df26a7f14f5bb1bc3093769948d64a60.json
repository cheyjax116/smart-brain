{"ast":null,"code":"var _jsxFileName = \"/Users/crystalword/Documents/Coding/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation.js';\nimport SignIn from './components/SignIn/SignIn.js';\nimport Register from './components/Register/Register.js';\nimport Logo from './components/Logo/Logo.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport Rank from './components/Rank/Rank.js';\nimport GuestRank from './components/GuestRank/GuestRank.js';\nimport GuestImageLinkForm from './components/GuestImageLinkForm/GuestImageLinkForm.js';\nimport LimitPopUp from './components/LimitPopUp/LimitPopUp.js';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: \"771a12bc39784c12ad9628465629a3ba\"\n});\nconst particlesOptions = {\n  \"particles\": {\n    \"number\": {\n      \"value\": 100\n    },\n    \"size\": {\n      \"value\": 3\n    }\n  },\n  \"interactivity\": {\n    \"events\": {\n      \"onhover\": {\n        \"enable\": true,\n        \"mode\": \"repulse\"\n      }\n    }\n  }\n};\nconst initialState = {\n  input: \"\",\n  imageUrl: \"\",\n  boxes: [],\n  route: \"SignIn\",\n  isSignedIn: false,\n  boxTotal: \"\",\n  limitSeen: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    // password: \"\",\n    entries: 0,\n    joined: \"\"\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          // password: \"\",\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const image = document.getElementById(\"inputimage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return data.outputs[0].data.regions.map(face => {\n        const clarifaiFace = face.region_info.bounding_box;\n        return {\n          leftCol: clarifaiFace.left_col * width,\n          topRow: clarifaiFace.top_row * height,\n          rightCol: width - clarifaiFace.right_col * width,\n          bottomRow: height - clarifaiFace.bottom_row * height\n        };\n      });\n    };\n\n    this.displayFaceBox = boxes => {\n      // console.log(boxes.length);\n      this.setState({\n        boxes: boxes\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        // console.log(response)\n        if (response) {\n          fetch(\"http://localhost:3000/image\", {\n            method: \"put\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onSubmitGuest = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        // console.log(response)\n        if (response) {\n          fetch(\"http://localhost:3000/image/guest\", {\n            method: \"put\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n\n            if ({\n              entries: count\n            } >= \"1\") {\n              this.toggleLimitPopUp();\n              this.setState(Object.assign(this.state.user, {\n                entries: 10\n              }));\n            }\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onReturn = event => {\n      if (event.key === \"Enter\") {\n        this.onButtonSubmit();\n      }\n    };\n\n    this.onGuestReturn = event => {\n      if (event.key === \"Enter\") {\n        this.onSubmitGuest();\n      }\n    };\n\n    this.onRouteChange = route => {\n      if (route === \"signout\") {\n        this.setState(initialState);\n      } else if (route === \"home\") {\n        this.setState({\n          isSignedIn: true\n        });\n      } else if (route === \"guest\") {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.hideTotal = () => {\n      var T = document.getElementById(\"hide\");\n      T.style.display = \"block\";\n    };\n\n    this.toggleLimitPopUp = () => {\n      this.setState({\n        limitSeen: !this.state.limitSeen\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      boxes\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 6\n      }, this), route === \"home\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit,\n          onReturn: this.onReturn,\n          boxes: boxes,\n          hideTotal: this.hideTotal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          boxes: boxes,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 8\n      }, this) : route === \"guest\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.state.limitSeen ? /*#__PURE__*/_jsxDEV(LimitPopUp, {\n          toggle: this.toggleLimitPopUp,\n          onRouteChange: this.onRouteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 30\n        }, this) : null, /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(GuestRank, {\n          name: \"Guest\",\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(GuestImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onSubmitGuest,\n          onReturn: this.onGuestReturn,\n          boxes: boxes,\n          hideTotal: this.hideTotal,\n          toggle: this.toggleLimitPopUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          boxes: boxes,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 8\n      }, this) : route === \"SignIn\" ? /*#__PURE__*/_jsxDEV(SignIn, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 30\n      }, this) : route === \"signout\" ? /*#__PURE__*/_jsxDEV(SignIn, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 10\n      }, this) //    : <Register onRouteChange={this.onRouteChange}/>\n      ]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/crystalword/Documents/Coding/facerecognitionbrain/src/App.js"],"names":["React","Component","Navigation","SignIn","Register","Logo","ImageLinkForm","FaceRecognition","Rank","GuestRank","GuestImageLinkForm","LimitPopUp","Particles","Clarifai","app","App","apiKey","particlesOptions","initialState","input","imageUrl","boxes","route","isSignedIn","boxTotal","limitSeen","user","id","name","email","entries","joined","constructor","loadUser","data","setState","calculateFaceLocation","image","document","getElementById","width","Number","height","outputs","regions","map","face","clarifaiFace","region_info","bounding_box","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","value","onButtonSubmit","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","console","log","err","onSubmitGuest","toggleLimitPopUp","onReturn","key","onGuestReturn","onRouteChange","hideTotal","T","style","display","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Navigation from './components/Navigation/Navigation.js'\nimport SignIn from './components/SignIn/SignIn.js'\nimport Register from './components/Register/Register.js'\nimport Logo from './components/Logo/Logo.js'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport Rank from './components/Rank/Rank.js';\nimport GuestRank from './components/GuestRank/GuestRank.js';\nimport GuestImageLinkForm from './components/GuestImageLinkForm/GuestImageLinkForm.js';\nimport LimitPopUp from './components/LimitPopUp/LimitPopUp.js'\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport './App.css';\n\n\nconst app = new Clarifai.App({\n\n    apiKey: \"771a12bc39784c12ad9628465629a3ba\"\n});\n\nconst particlesOptions = {\n        \n        \"particles\": {\n\t        \"number\": {\n\t            \"value\": 100\n\t        },\n\t        \"size\": {\n\t            \"value\": 3\n\t        }\n\t    },\n\t    \"interactivity\": {\n\t        \"events\": {\n\t            \"onhover\": {\n\t                \"enable\": true,\n\t                \"mode\": \"repulse\"\n\t            }\n\t        }\n\t    }\n        \n    \n}\n      \nconst initialState = {\n     \n        input: \"\",\n        imageUrl:\"\",\n        boxes: [],\n        route: \"SignIn\",\n        isSignedIn: false,\n        boxTotal:\"\",\n        limitSeen: false,\n        user: {\n            id: \"\",\n            name: \"\",\n            email: \"\",\n            // password: \"\",\n            entries: 0,\n            joined: \"\"\n        \n    }\n    \n}\n\nclass App extends Component {\n    \n    constructor(){\n        super();\n        this.state = initialState\n        }\n    \n\n\n    loadUser = (data) => {\n        this.setState({user: {\n            id: data.id,\n            name: data.name,\n            email: data.email,\n            // password: \"\",\n            entries: data.entries,\n            joined: data.joined,\n\n        }}) \n\n    }\n\n\n\n\n\n    calculateFaceLocation = (data) => {\n        const image = document.getElementById(\"inputimage\");\n        const width = Number(image.width);\n        const height = Number(image.height);\n\n       return data.outputs[0].data.regions.map(face =>  {\n        const clarifaiFace = face.region_info.bounding_box;\n        \n        return {\n           leftCol: clarifaiFace.left_col * width, \n           topRow: clarifaiFace.top_row * height,\n           rightCol: width - (clarifaiFace.right_col * width),\n           bottomRow: height - (clarifaiFace.bottom_row * height)\n\n                }\n\n    });\n}\n\n    displayFaceBox = (boxes) => {\n        // console.log(boxes.length);\n        this.setState({boxes: boxes})\n        \n        }\n        \n\n    \n    onInputChange = (event) => {\n        \n       this.setState({input:event.target.value}) \n    }\n    \n    \n\n    \n    onButtonSubmit = () => {\n        \n        this.setState({imageUrl: this.state.input});\n        app.models\n        .predict(\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input)\n        .then((response) => {\n            // console.log(response)\n         if (response) {\n             fetch(\"http://localhost:3000/image\", {\n                method: \"put\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                  id: this.state.user.id\n                })\n            })\n                .then(response => response.json())\n                .then(count => {\n                    this.setState(Object.assign(this.state.user, { entries: count}))\n                })\n                .catch(console.log)    \n         }   \n         this.displayFaceBox(this.calculateFaceLocation(response))\n         \n        })\n\n        .catch((err) => {\n         console.log(err);\n        })\n\n        };  \n\n        onSubmitGuest = () => {\n            this.setState({imageUrl: this.state.input});\n            app.models\n            .predict(\n            Clarifai.FACE_DETECT_MODEL,\n            this.state.input)\n            .then((response) => {\n                // console.log(response)\n             if (response) {\n                 fetch(\"http://localhost:3000/image/guest\", {\n                    method: \"put\",\n                    headers: {\"Content-Type\": \"application/json\"},\n                    body: JSON.stringify({\n                      id: this.state.user.id\n                    })\n                })\n                    .then(response => response.json())\n                    .then(count => {\n                        this.setState(Object.assign(this.state.user, { entries: count}))\n                        if ({entries: count} >= \"1\") {\n                            this.toggleLimitPopUp()\n                            this.setState(Object.assign(this.state.user, { entries: 10}))\n\n                        }\n\n                    })\n                    .catch(console.log)    \n             }   \n             this.displayFaceBox(this.calculateFaceLocation(response))\n             \n            })\n    \n            .catch((err) => {\n             console.log(err);\n            })\n\n        }\n\n    onReturn = (event) => {\n        \n        if (event.key === \"Enter\") {\n            this.onButtonSubmit()\n    \n                \n         }\n            \n        }\n    \n        onGuestReturn = (event) => {\n        \n        if (event.key === \"Enter\") {\n            this.onSubmitGuest()\n    \n                \n         }\n            \n        }\n\n\n    onRouteChange = (route) => {\n\n        if (route === \"signout\") {\n            \n            this.setState(initialState)\n            \n\n        } else if (route === \"home\"){\n            this.setState({isSignedIn: true})\n           \n\n        }  else if (route === \"guest\") {\n            this.setState({isSignedIn: true})\n        }\n            \n        this.setState({route: route});\n        \n    }\n    \n       hideTotal = () => {\n       var T = document.getElementById(\"hide\")\n       T.style.display = \"block\";\n   }\n\n\n   toggleLimitPopUp = () => {\n    this.setState({\n      limitSeen: !this.state.limitSeen\n    });\n  };\n\n\n   \n\n\n    render(){\n        const {isSignedIn, imageUrl, route, boxes} = this.state;\n\n  return (\n    <div className=\"App\">\n     \n   <Particles className=\"particles\"\n              params={particlesOptions}\n            />\n \n     <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n     { route === \"home\"\n     ? <div> \n     <Logo />\n     <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n     <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} onReturn={this.onReturn} boxes={boxes} hideTotal={this.hideTotal}/>\n     <FaceRecognition boxes={boxes} imageUrl={imageUrl}/>\n\n     </div> \n\n     : route === \"guest\" \n     \n     ? <div> \n     \n     {this.state.limitSeen ? <LimitPopUp toggle={this.toggleLimitPopUp} onRouteChange={this.onRouteChange} /> : null}\n     <Logo />\n     <GuestRank name=\"Guest\" entries={this.state.user.entries}/>\n     <GuestImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onSubmitGuest} onReturn={this.onGuestReturn} boxes={boxes} hideTotal={this.hideTotal} toggle={this.toggleLimitPopUp}/>\n     <FaceRecognition boxes={boxes} imageUrl={imageUrl}/>\n\n     </div> \n     \n\n    : ( \n        route === \"SignIn\" ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n       : route === \"signout\" ? <SignIn onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\n       : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n    //    : <Register onRouteChange={this.onRouteChange}/>\n        \n  )\n     \n     }\n    </div>\n  );\n}}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}