{"ast":null,"code":"var _jsxFileName = \"/Users/crystalword/Documents/Coding/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation.js';\nimport SignIn from './components/SignIn/SignIn.js';\nimport Register from './components/Register/Register.js';\nimport Logo from './components/Logo/Logo.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport Rank from './components/Rank/Rank.js';\nimport GuestRank from './components/GuestRank/GuestRank.js';\nimport GuestImageLinkForm from './components/GuestImageLinkForm/GuestImageLinkForm.js';\nimport LimitPopUp from './components/LimitPopUp/LimitPopUp.js';\nimport Particles from 'react-particles-js';\nimport './App.css'; // const app = new Clarifai.App({\n//     apiKey: \"771a12bc39784c12ad9628465629a3ba\"\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst particlesOptions = {\n  \"particles\": {\n    \"number\": {\n      \"value\": 100\n    },\n    \"size\": {\n      \"value\": 3\n    }\n  },\n  \"interactivity\": {\n    \"events\": {\n      \"onhover\": {\n        \"enable\": true,\n        \"mode\": \"repulse\"\n      }\n    }\n  }\n};\nconst initialState = {\n  input: \"\",\n  imageUrl: \"\",\n  boxes: [],\n  route: \"SignIn\",\n  isSignedIn: false,\n  boxTotal: \"\",\n  limitSeen: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    // password: \"\",\n    entries: 0,\n    guestEntries: 2,\n    joined: \"\"\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          // password: \"\",\n          entries: data.entries,\n          guestEntries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const image = document.getElementById(\"inputimage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return data.outputs[0].data.regions.map(face => {\n        const clarifaiFace = face.region_info.bounding_box;\n        return {\n          leftCol: clarifaiFace.left_col * width,\n          topRow: clarifaiFace.top_row * height,\n          rightCol: width - clarifaiFace.right_col * width,\n          bottomRow: height - clarifaiFace.bottom_row * height\n        };\n      });\n    };\n\n    this.displayFaceBox = boxes => {\n      // console.log(boxes.length);\n      this.setState({\n        boxes: boxes\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch(\"http://localhost:3000/imageurl\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        // console.log(response)\n        if (response) {\n          fetch(\"http://localhost:3000/image\", {\n            method: \"put\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onSubmitGuest = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch(\"http://localhost:3000/image/guesturl\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        // console.log(response)\n        if (response) {\n          fetch(\"http://localhost:3000/image/guest\", {\n            method: \"put\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              guestEntries: count\n            }));\n            console.log(this.state.user.guestEntries);\n\n            if (this.state.user.guestEntries <= 0) {\n              this.toggleLimitPopUp();\n            }\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onReturn = event => {\n      if (event.key === \"Enter\") {\n        this.onButtonSubmit();\n      }\n    };\n\n    this.onGuestReturn = event => {\n      if (event.key === \"Enter\") {\n        this.onSubmitGuest();\n      }\n    };\n\n    this.onRouteChange = route => {\n      if (route === \"signout\") {\n        this.setState(initialState);\n      } else if (route === \"home\") {\n        this.setState({\n          isSignedIn: true\n        });\n      } else if (route === \"guest\") {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.hideTotal = () => {\n      var T = document.getElementById(\"hide\");\n      T.style.display = \"block\";\n    };\n\n    this.toggleLimitPopUp = () => {\n      this.setState({\n        limitSeen: true\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      boxes\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 6\n      }, this), route === \"home\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit,\n          onReturn: this.onReturn,\n          boxes: boxes,\n          hideTotal: this.hideTotal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          boxes: boxes,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 8\n      }, this) : route === \"guest\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.state.limitSeen ? /*#__PURE__*/_jsxDEV(LimitPopUp, {\n          toggle: this.toggleLimitPopUp,\n          onRouteChange: this.onRouteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 6\n        }, this) : null, /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(GuestRank, {\n          name: \"Guest\",\n          guestEntries: this.state.user.guestEntries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(GuestImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onSubmitGuest,\n          onReturn: this.onGuestReturn,\n          boxes: boxes,\n          hideTotal: this.hideTotal,\n          toggle: this.toggleLimitPopUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          boxes: boxes,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 8\n      }, this) : route === \"SignIn\" ? /*#__PURE__*/_jsxDEV(SignIn, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 30\n      }, this) : route === \"signout\" ? /*#__PURE__*/_jsxDEV(SignIn, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 10\n      }, this) //    : <Register onRouteChange={this.onRouteChange}/>\n      ]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/crystalword/Documents/Coding/facerecognitionbrain/src/App.js"],"names":["React","Component","Navigation","SignIn","Register","Logo","ImageLinkForm","FaceRecognition","Rank","GuestRank","GuestImageLinkForm","LimitPopUp","Particles","particlesOptions","initialState","input","imageUrl","boxes","route","isSignedIn","boxTotal","limitSeen","user","id","name","email","entries","guestEntries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","image","document","getElementById","width","Number","height","outputs","regions","map","face","clarifaiFace","region_info","bounding_box","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","value","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","console","log","err","onSubmitGuest","toggleLimitPopUp","onReturn","key","onGuestReturn","onRouteChange","hideTotal","T","style","display","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Navigation from './components/Navigation/Navigation.js'\nimport SignIn from './components/SignIn/SignIn.js'\nimport Register from './components/Register/Register.js'\nimport Logo from './components/Logo/Logo.js'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport Rank from './components/Rank/Rank.js';\nimport GuestRank from './components/GuestRank/GuestRank.js';\nimport GuestImageLinkForm from './components/GuestImageLinkForm/GuestImageLinkForm.js';\nimport LimitPopUp from './components/LimitPopUp/LimitPopUp.js'\nimport Particles from 'react-particles-js';\nimport './App.css';\n\n\n// const app = new Clarifai.App({\n\n//     apiKey: \"771a12bc39784c12ad9628465629a3ba\"\n// });\n\nconst particlesOptions = {\n        \n        \"particles\": {\n\t        \"number\": {\n\t            \"value\": 100\n\t        },\n\t        \"size\": {\n\t            \"value\": 3\n\t        }\n\t    },\n\t    \"interactivity\": {\n\t        \"events\": {\n\t            \"onhover\": {\n\t                \"enable\": true,\n\t                \"mode\": \"repulse\"\n\t            }\n\t        }\n\t    }\n        \n    \n}\n      \nconst initialState = {\n     \n        input: \"\",\n        imageUrl:\"\",\n        boxes: [],\n        route: \"SignIn\",\n        isSignedIn: false,\n        boxTotal:\"\",\n        limitSeen: false,\n        user: {\n            id: \"\",\n            name: \"\",\n            email: \"\",\n            // password: \"\",\n            entries: 0,\n            guestEntries: 2,\n            joined: \"\"\n        \n    }\n    \n}\n\nclass App extends Component {\n    \n    constructor(){\n        super();\n        this.state = initialState\n        }\n    \n\n\n    loadUser = (data) => {\n        this.setState({user: {\n            id: data.id,\n            name: data.name,\n            email: data.email,\n            // password: \"\",\n            entries: data.entries,\n            guestEntries: data.entries,\n            joined: data.joined,\n\n        }}) \n\n    }\n\n\n\n\n\n    calculateFaceLocation = (data) => {\n        const image = document.getElementById(\"inputimage\");\n        const width = Number(image.width);\n        const height = Number(image.height);\n\n       return data.outputs[0].data.regions.map(face =>  {\n        const clarifaiFace = face.region_info.bounding_box;\n        \n        return {\n           leftCol: clarifaiFace.left_col * width, \n           topRow: clarifaiFace.top_row * height,\n           rightCol: width - (clarifaiFace.right_col * width),\n           bottomRow: height - (clarifaiFace.bottom_row * height)\n\n                }\n\n    });\n}\n\n    displayFaceBox = (boxes) => {\n        // console.log(boxes.length);\n        this.setState({boxes: boxes})\n        \n        }\n        \n\n    \n    onInputChange = (event) => {\n        \n       this.setState({input:event.target.value}) \n    }\n    \n    \n\n    \n    onButtonSubmit = () => {\n        \n        this.setState({imageUrl: this.state.input});\n        fetch(\"http://localhost:3000/imageurl\", {\n                method: \"post\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                  input: this.state.input\n                })\n            })\n            .then(response => response.json())    \n            .then((response) => {\n                // console.log(response)\n                if (response) {\n                    fetch(\"http://localhost:3000/image\", {\n                    method: \"put\",\n                    headers: {\"Content-Type\": \"application/json\"},\n                    body: JSON.stringify({\n                        id: this.state.user.id\n                    })\n                })\n                    .then(response => response.json())\n                    .then(count => {\n                        this.setState(Object.assign(this.state.user, { entries: count}))\n                    })\n                    .catch(console.log)    \n                }   \n                this.displayFaceBox(this.calculateFaceLocation(response))\n                \n            })\n\n            .catch((err) => {\n                console.log(err);\n            })\n\n            };  \n\n        onSubmitGuest = () => {\n            this.setState({imageUrl: this.state.input});\n            fetch(\"http://localhost:3000/image/guesturl\", {\n                method: \"post\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                  input: this.state.input\n                })\n            })\n            .then(response => response.json())   \n            .then((response) => {\n                // console.log(response)\n             if (response) {\n                 fetch(\"http://localhost:3000/image/guest\", {\n                    method: \"put\",\n                    headers: {\"Content-Type\": \"application/json\"},\n                    body: JSON.stringify({\n                      id: this.state.user.id\n                    })\n                })\n                    .then(response => response.json())\n                    .then(count => {\n                        this.setState(Object.assign(this.state.user, { guestEntries: count}))\n                        console.log(this.state.user.guestEntries)\n\n                        if (this.state.user.guestEntries <= 0) {\n                            this.toggleLimitPopUp()\n                           \n                    } \n                \n                })         \n\n                \n                    .catch(console.log)    \n             }   \n             this.displayFaceBox(this.calculateFaceLocation(response))\n             \n            })\n    \n            .catch((err) => {\n             console.log(err);\n            })\n\n        }\n\n    onReturn = (event) => {\n        \n        if (event.key === \"Enter\") {\n            this.onButtonSubmit()\n    \n                \n         }\n            \n        }\n    \n        onGuestReturn = (event) => {\n        \n        if (event.key === \"Enter\") {\n            this.onSubmitGuest()\n    \n                \n         }\n            \n        }\n\n\n    onRouteChange = (route) => {\n\n        if (route === \"signout\") {\n            \n            this.setState(initialState)\n            \n\n        } else if (route === \"home\"){\n            this.setState({isSignedIn: true})\n           \n\n        }  else if (route === \"guest\") {\n            this.setState({isSignedIn: true})\n        }\n            \n        this.setState({route: route});\n        \n    }\n    \n       hideTotal = () => {\n       var T = document.getElementById(\"hide\")\n       T.style.display = \"block\";\n   }\n\n\n   toggleLimitPopUp = () => {\n    this.setState({\n      limitSeen: true\n    });\n  };\n\n\n   \n\n\n    render(){\n        const {isSignedIn, imageUrl, route, boxes} = this.state;\n\n  return (\n    <div className=\"App\">\n     \n   <Particles className=\"particles\"\n              params={particlesOptions}\n            />\n \n     <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n     { route === \"home\"\n     ? <div> \n     <Logo />\n     <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n     <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} onReturn={this.onReturn} boxes={boxes} hideTotal={this.hideTotal}/>\n     <FaceRecognition boxes={boxes} imageUrl={imageUrl}/>\n\n     </div> \n\n     : route === \"guest\" \n     \n     ? <div> \n     \n     {this.state.limitSeen ? \n     <LimitPopUp toggle={this.toggleLimitPopUp} onRouteChange={this.onRouteChange} /> : null}\n     <Logo />\n     <GuestRank name=\"Guest\" guestEntries={this.state.user.guestEntries}/>\n     <GuestImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onSubmitGuest} onReturn={this.onGuestReturn} boxes={boxes} hideTotal={this.hideTotal} toggle={this.toggleLimitPopUp}/>\n     <FaceRecognition boxes={boxes} imageUrl={imageUrl}/>\n\n     </div> \n     \n\n    : ( \n        route === \"SignIn\" ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n       : route === \"signout\" ? <SignIn onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\n       : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n    //    : <Register onRouteChange={this.onRouteChange}/>\n        \n  )\n     \n     }\n    </div>\n  );\n}}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}