{"ast":null,"code":"var _jsxFileName = \"/Users/crystalword/Documents/Coding/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation.js';\nimport SignIn from './components/SignIn/SignIn.js';\nimport Register from './components/Register/Register.js';\nimport Logo from './components/Logo/Logo.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport Rank from './components/Rank/Rank.js';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: \"771a12bc39784c12ad9628465629a3ba\"\n});\nconst particlesOptions = {\n  \"particles\": {\n    \"number\": {\n      \"value\": 100\n    },\n    \"size\": {\n      \"value\": 3\n    }\n  },\n  \"interactivity\": {\n    \"events\": {\n      \"onhover\": {\n        \"enable\": true,\n        \"mode\": \"repulse\"\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          // password: \"\",\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const image = document.getElementById(\"inputimage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return data.outputs[0].data.regions.map(face => {\n        const clarifaiFace = face.region_info.bounding_box;\n        return {\n          leftCol: clarifaiFace.left_col * width,\n          topRow: clarifaiFace.top_row * height,\n          rightCol: width - clarifaiFace.right_col * width,\n          bottomRow: height - clarifaiFace.bottom_row * height\n        };\n      });\n    };\n\n    this.displayFaceBox = boxes => {\n      console.log(boxes.length);\n      this.setState({\n        boxes: boxes\n      }); // const data = boxes.toString();\n    };\n\n    this.showFacesDetected = boxes => {\n      var sum = 0;\n      sum = +boxes;\n      console.log(sum);\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        // console.log(response)\n        if (response) {\n          fetch(\"http://localhost:3000/image\", {\n            method: \"put\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onReturn = event => {\n      if (event.key === \"Enter\") {\n        this.onButtonSubmit();\n      }\n    };\n\n    this.onRouteChange = route => {\n      if (route === \"signout\") {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === \"home\") {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      boxes: [],\n      route: \"SignIn\",\n      isSignedIn: false,\n      user: {\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        // password: \"\",\n        entries: 0,\n        joined: \"\"\n      }\n    };\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      boxes\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 6\n      }, this), route === \"home\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit,\n          onReturn: this.onReturn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          boxes: boxes,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 8\n      }, this) : route === \"SignIn\" ? /*#__PURE__*/_jsxDEV(SignIn, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 30\n      }, this) : route === \"signout\" ? /*#__PURE__*/_jsxDEV(SignIn, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 10\n      }, this) //    : <Register onRouteChange={this.onRouteChange}/>\n      ]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/crystalword/Documents/Coding/facerecognitionbrain/src/App.js"],"names":["React","Component","Navigation","SignIn","Register","Logo","ImageLinkForm","FaceRecognition","Rank","Particles","Clarifai","app","App","apiKey","particlesOptions","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","image","document","getElementById","width","Number","height","outputs","regions","map","face","clarifaiFace","region_info","bounding_box","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","boxes","console","log","length","showFacesDetected","sum","onInputChange","event","input","target","value","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","onReturn","key","onRouteChange","route","isSignedIn","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,aAAP,MAA0B,6CAA1B;AACA,OAAOC,eAAP,MAA4B,iDAA5B;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,WAAP;;AAGA,MAAMC,GAAG,GAAG,IAAID,QAAQ,CAACE,GAAb,CAAiB;AAEzBC,EAAAA,MAAM,EAAE;AAFiB,CAAjB,CAAZ;AAMA,MAAMC,gBAAgB,GAAG;AAEjB,eAAa;AACZ,cAAU;AACN,eAAS;AADH,KADE;AAIZ,YAAQ;AACJ,eAAS;AADL;AAJI,GAFI;AAUpB,mBAAiB;AACb,cAAU;AACN,iBAAW;AACP,kBAAU,IADH;AAEP,gBAAQ;AAFD;AADL;AADG;AAVG,CAAzB;;AAuBA,MAAMF,GAAN,SAAkBX,SAAlB,CAA4B;AAExBc,EAAAA,WAAW,GAAE;AAET;;AAFS,SAwBbC,QAxBa,GAwBDC,IAAD,IAAU;AACjB,WAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAE;AACjBC,UAAAA,EAAE,EAAEH,IAAI,CAACG,EADQ;AAEjBC,UAAAA,IAAI,EAAEJ,IAAI,CAACI,IAFM;AAGjBC,UAAAA,KAAK,EAAEL,IAAI,CAACK,KAHK;AAIjB;AACAC,UAAAA,OAAO,EAAEN,IAAI,CAACM,OALG;AAMjBC,UAAAA,MAAM,EAAEP,IAAI,CAACO;AANI;AAAP,OAAd;AAUH,KAnCY;;AAAA,SAyCbC,qBAzCa,GAyCYR,IAAD,IAAU;AAC9B,YAAMS,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAd;AACA,YAAMC,KAAK,GAAGC,MAAM,CAACJ,KAAK,CAACG,KAAP,CAApB;AACA,YAAME,MAAM,GAAGD,MAAM,CAACJ,KAAK,CAACK,MAAP,CAArB;AAED,aAAOd,IAAI,CAACe,OAAL,CAAa,CAAb,EAAgBf,IAAhB,CAAqBgB,OAArB,CAA6BC,GAA7B,CAAiCC,IAAI,IAAK;AAChD,cAAMC,YAAY,GAAGD,IAAI,CAACE,WAAL,CAAiBC,YAAtC;AAEA,eAAO;AACJC,UAAAA,OAAO,EAAEH,YAAY,CAACI,QAAb,GAAwBX,KAD7B;AAEJY,UAAAA,MAAM,EAAEL,YAAY,CAACM,OAAb,GAAuBX,MAF3B;AAGJY,UAAAA,QAAQ,EAAEd,KAAK,GAAIO,YAAY,CAACQ,SAAb,GAAyBf,KAHxC;AAIJgB,UAAAA,SAAS,EAAEd,MAAM,GAAIK,YAAY,CAACU,UAAb,GAA0Bf;AAJ3C,SAAP;AAQH,OAXS,CAAP;AAYN,KA1DgB;;AAAA,SA4DbgB,cA5Da,GA4DKC,KAAD,IAAW;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AACA,WAAKjC,QAAL,CAAc;AAAC8B,QAAAA,KAAK,EAAEA;AAAR,OAAd,EAFwB,CAGxB;AAEC,KAjEQ;;AAAA,SAqEbI,iBArEa,GAqEQJ,KAAD,IAAW;AAC3B,UAAIK,GAAG,GAAG,CAAV;AACAA,MAAAA,GAAG,GAAE,CAAEL,KAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACH,KAzEY;;AAAA,SA2EbC,aA3Ea,GA2EIC,KAAD,IAAW;AAExB,WAAKrC,QAAL,CAAc;AAACsC,QAAAA,KAAK,EAACD,KAAK,CAACE,MAAN,CAAaC;AAApB,OAAd;AACF,KA9EY;;AAAA,SAmFbC,cAnFa,GAmFI,MAAM;AAEnB,WAAKzC,QAAL,CAAc;AAAC0C,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWL;AAAtB,OAAd;AACA7C,MAAAA,GAAG,CAACmD,MAAJ,CACCC,OADD,CAEArD,QAAQ,CAACsD,iBAFT,EAGA,KAAKH,KAAL,CAAWL,KAHX,EAICS,IAJD,CAIOC,QAAD,IAAc;AAChB;AACH,YAAIA,QAAJ,EAAc;AACVC,UAAAA,KAAK,CAAC,6BAAD,EAAgC;AAClCC,YAAAA,MAAM,EAAE,KAD0B;AAElCC,YAAAA,OAAO,EAAE;AAAC,8BAAgB;AAAjB,aAFyB;AAGlCC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBpD,cAAAA,EAAE,EAAE,KAAKyC,KAAL,CAAW1C,IAAX,CAAgBC;AADD,aAAf;AAH4B,WAAhC,CAAL,CAOI6C,IAPJ,CAOSC,QAAQ,IAAIA,QAAQ,CAACO,IAAT,EAPrB,EAQIR,IARJ,CAQSS,KAAK,IAAI;AACX,iBAAKxD,QAAL,CAAcyD,MAAM,CAACC,MAAP,CAAc,KAAKf,KAAL,CAAW1C,IAAzB,EAA+B;AAAEI,cAAAA,OAAO,EAAEmD;AAAX,aAA/B,CAAd;AACH,WAVJ;AAYH;;AACD,aAAK3B,cAAL,CAAoB,KAAKtB,qBAAL,CAA2ByC,QAA3B,CAApB;AACA,OArBD,EAuBCW,KAvBD,CAuBQC,GAAD,IAAS;AACf7B,QAAAA,OAAO,CAACC,GAAR,CAAY4B,GAAZ;AACA,OAzBD;AA6BC,KAnHQ;;AAAA,SAqHbC,QArHa,GAqHDxB,KAAD,IAAW;AAElB,UAAIA,KAAK,CAACyB,GAAN,KAAc,OAAlB,EAA2B;AACvB,aAAKrB,cAAL;AAGF;AAED,KA7HQ;;AAAA,SA+HbsB,aA/Ha,GA+HIC,KAAD,IAAW;AAEvB,UAAIA,KAAK,KAAK,SAAd,EAAyB;AAErB,aAAKhE,QAAL,CAAc;AAACiE,UAAAA,UAAU,EAAE;AAAb,SAAd;AAGH,OALD,MAKO,IAAID,KAAK,KAAK,MAAd,EAAqB;AACxB,aAAKhE,QAAL,CAAc;AAACiE,UAAAA,UAAU,EAAE;AAAb,SAAd;AAEH;;AAED,WAAKjE,QAAL,CAAc;AAACgE,QAAAA,KAAK,EAAEA;AAAR,OAAd;AAEH,KA7IY;;AAGT,SAAKrB,KAAL,GAAa;AAETL,MAAAA,KAAK,EAAE,EAFE;AAGTI,MAAAA,QAAQ,EAAC,EAHA;AAITZ,MAAAA,KAAK,EAAE,EAJE;AAKTkC,MAAAA,KAAK,EAAE,QALE;AAMTC,MAAAA,UAAU,EAAE,KANH;AAOThE,MAAAA,IAAI,EAAE;AACFC,QAAAA,EAAE,EAAE,EADF;AAEFC,QAAAA,IAAI,EAAE,EAFJ;AAGFC,QAAAA,KAAK,EAAE,EAHL;AAIF;AACAC,QAAAA,OAAO,EAAE,CALP;AAMFC,QAAAA,MAAM,EAAE;AANN;AAPG,KAAb;AAiBH;;AAgID4D,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACD,MAAAA,UAAD;AAAavB,MAAAA,QAAb;AAAuBsB,MAAAA,KAAvB;AAA8BlC,MAAAA;AAA9B,QAAuC,KAAKa,KAAlD;AAEN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BAED,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,WAArB;AACW,QAAA,MAAM,EAAE/C;AADnB;AAAA;AAAA;AAAA;AAAA,cAFC,eAMC,QAAC,UAAD;AAAY,QAAA,UAAU,EAAEqE,UAAxB;AAAoC,QAAA,aAAa,EAAE,KAAKF;AAAxD;AAAA;AAAA;AAAA;AAAA,cAND,EAOGC,KAAK,KAAK,MAAV,gBACA;AAAA,gCACF,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBADE,eAEF,QAAC,IAAD;AAAM,UAAA,IAAI,EAAE,KAAKrB,KAAL,CAAW1C,IAAX,CAAgBE,IAA5B;AAAkC,UAAA,OAAO,EAAE,KAAKwC,KAAL,CAAW1C,IAAX,CAAgBI;AAA3D;AAAA;AAAA;AAAA;AAAA,gBAFE,eAGF,QAAC,aAAD;AAAe,UAAA,aAAa,EAAE,KAAK+B,aAAnC;AAAkD,UAAA,cAAc,EAAE,KAAKK,cAAvE;AAAuF,UAAA,QAAQ,EAAE,KAAKoB;AAAtG;AAAA;AAAA;AAAA;AAAA,gBAHE,eAIF,QAAC,eAAD;AAAiB,UAAA,KAAK,EAAE/B,KAAxB;AAA+B,UAAA,QAAQ,EAAEY;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAJE;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,GAUCsB,KAAK,KAAK,QAAV,gBAAqB,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,KAAKlE,QAAvB;AAAiC,QAAA,aAAa,EAAE,KAAKiE;AAArD;AAAA;AAAA;AAAA;AAAA,cAArB,GACCC,KAAK,KAAK,SAAV,gBAAsB,QAAC,MAAD;AAAQ,QAAA,aAAa,EAAE,KAAKD;AAA5B;AAAA;AAAA;AAAA;AAAA,cAAtB,gBACA,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,KAAKjE,QAAzB;AAAmC,QAAA,aAAa,EAAE,KAAKiE;AAAvD;AAAA;AAAA;AAAA;AAAA,cAZF,CAaH;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4BD;;AArL2B;;AAuL5B,eAAerE,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport Navigation from './components/Navigation/Navigation.js'\nimport SignIn from './components/SignIn/SignIn.js'\nimport Register from './components/Register/Register.js'\nimport Logo from './components/Logo/Logo.js'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport Rank from './components/Rank/Rank.js';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport './App.css';\n\n\nconst app = new Clarifai.App({\n\n    apiKey: \"771a12bc39784c12ad9628465629a3ba\"\n});\n\n\nconst particlesOptions = {\n        \n        \"particles\": {\n\t        \"number\": {\n\t            \"value\": 100\n\t        },\n\t        \"size\": {\n\t            \"value\": 3\n\t        }\n\t    },\n\t    \"interactivity\": {\n\t        \"events\": {\n\t            \"onhover\": {\n\t                \"enable\": true,\n\t                \"mode\": \"repulse\"\n\t            }\n\t        }\n\t    }\n        \n    \n}\n      \n\nclass App extends Component {\n    \n    constructor(){\n        \n        super();\n        this.state = {\n            \n            input: \"\",\n            imageUrl:\"\",\n            boxes: [],\n            route: \"SignIn\",\n            isSignedIn: false,\n            user: {\n                id: \"\",\n                name: \"\",\n                email: \"\",\n                // password: \"\",\n                entries: 0,\n                joined: \"\"\n                \n            }\n        }\n    }\n    \n\n\n    loadUser = (data) => {\n        this.setState({user: {\n            id: data.id,\n            name: data.name,\n            email: data.email,\n            // password: \"\",\n            entries: data.entries,\n            joined: data.joined,\n\n        }}) \n\n    }\n\n\n\n\n\n    calculateFaceLocation = (data) => {\n        const image = document.getElementById(\"inputimage\");\n        const width = Number(image.width);\n        const height = Number(image.height);\n\n       return data.outputs[0].data.regions.map(face =>  {\n        const clarifaiFace = face.region_info.bounding_box;\n        \n        return {\n           leftCol: clarifaiFace.left_col * width, \n           topRow: clarifaiFace.top_row * height,\n           rightCol: width - (clarifaiFace.right_col * width),\n           bottomRow: height - (clarifaiFace.bottom_row * height)\n\n                }\n\n    });\n}\n\n    displayFaceBox = (boxes) => {\n        console.log(boxes.length);\n        this.setState({boxes: boxes})\n        // const data = boxes.toString();\n        \n        }\n        \n        \n\n    showFacesDetected = (boxes) => {\n        var sum = 0;\n        sum =+ boxes;\n        console.log(sum);\n    }\n    \n    onInputChange = (event) => {\n        \n       this.setState({input:event.target.value}) \n    }\n    \n    \n\n    \n    onButtonSubmit = () => {\n        \n        this.setState({imageUrl: this.state.input});\n        app.models\n        .predict(\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input)\n        .then((response) => {\n            // console.log(response)\n         if (response) {\n             fetch(\"http://localhost:3000/image\", {\n                method: \"put\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                  id: this.state.user.id\n                })\n            })\n                .then(response => response.json())\n                .then(count => {\n                    this.setState(Object.assign(this.state.user, { entries: count}))\n                })\n             \n         }   \n         this.displayFaceBox(this.calculateFaceLocation(response))\n        })\n\n        .catch((err) => {\n         console.log(err);\n        })\n\n  \n\n        };  \n\n    onReturn = (event) => {\n        \n        if (event.key === \"Enter\") {\n            this.onButtonSubmit()\n    \n                \n         }\n            \n        }\n\n    onRouteChange = (route) => {\n\n        if (route === \"signout\") {\n            \n            this.setState({isSignedIn: false})\n            \n\n        } else if (route === \"home\"){\n            this.setState({isSignedIn: true})\n\n        } \n            \n        this.setState({route: route});\n        \n    }\n    \n    \n\n\n    \n    \n    render(){\n        const {isSignedIn, imageUrl, route, boxes} = this.state;\n\n  return (\n    <div className=\"App\">\n     \n   <Particles className=\"particles\"\n              params={particlesOptions}\n            />\n \n     <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n     { route === \"home\"  \n     ? <div> \n     <Logo />\n     <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n     <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} onReturn={this.onReturn} />\n     <FaceRecognition boxes={boxes} imageUrl={imageUrl}/>\n     </div> \n     \n\n    : ( \n        route === \"SignIn\" ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n       : route === \"signout\" ? <SignIn onRouteChange={this.onRouteChange}/>\n       : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n    //    : <Register onRouteChange={this.onRouteChange}/>\n        \n  )\n     \n     }\n    </div>\n  );\n}}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}