{"ast":null,"code":"var _jsxFileName = \"/Users/crystalword/Documents/Coding/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation.js';\nimport SignIn from './components/SignIn/SignIn.js';\nimport Register from './components/Register/Register.js';\nimport Logo from './components/Logo/Logo.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport Rank from './components/Rank/Rank.js';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: \"771a12bc39784c12ad9628465629a3ba\"\n});\nconst particlesOptions = {\n  \"particles\": {\n    \"number\": {\n      \"value\": 100\n    },\n    \"size\": {\n      \"value\": 3\n    }\n  },\n  \"interactivity\": {\n    \"events\": {\n      \"onhover\": {\n        \"enable\": true,\n        \"mode\": \"repulse\"\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const image = document.getElementById(\"inputimage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return data.outputs[0].data.regions.map(face => {\n        const clarifaiFace = face.region_info.bounding_box;\n        return {\n          leftCol: clarifaiFace.left_col * width,\n          topRow: clarifaiFace.top_row * height,\n          rightCol: width - clarifaiFace.right_col * width,\n          bottomRow: height - clarifaiFace.bottom_row * height\n        };\n      });\n    };\n\n    this.displayFaceBox = boxes => {\n      this.setState({\n        boxes: boxes\n      });\n      const data = boxes.toString();\n      const arrays = data.split(\"\");\n      const objects = arrays.reduce((total, currentValue) => {\n        return total + currentValue;\n      }, 0);\n      console.log(objects);\n      const answer = objects.map(element => {\n        return element + 1;\n      });\n      console.log(answer);\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        // console.log(response)\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onReturn = event => {\n      if (event.key === \"Enter\") {\n        this.onButtonSubmit();\n      }\n    };\n\n    this.onRouteChange = route => {\n      if (route === \"signout\") {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === \"home\") {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      boxes: [],\n      route: \"SignIn\",\n      isSignedIn: false\n    };\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      boxes\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 6\n      }, this), route === \"home\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit,\n          onReturn: this.onReturn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          boxes: boxes,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 8\n      }, this) : route === \"SignIn\" ? /*#__PURE__*/_jsxDEV(SignIn, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 30\n      }, this) : route === \"signout\" ? /*#__PURE__*/_jsxDEV(SignIn, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 10\n      }, this) //    : <Register onRouteChange={this.onRouteChange}/>\n      ]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/crystalword/Documents/Coding/facerecognitionbrain/src/App.js"],"names":["React","Component","Navigation","SignIn","Register","Logo","ImageLinkForm","FaceRecognition","Rank","Particles","Clarifai","app","App","apiKey","particlesOptions","constructor","calculateFaceLocation","data","image","document","getElementById","width","Number","height","outputs","regions","map","face","clarifaiFace","region_info","bounding_box","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","boxes","setState","toString","arrays","split","objects","reduce","total","currentValue","console","log","answer","element","onInputChange","event","input","target","value","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","onReturn","key","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Navigation from './components/Navigation/Navigation.js'\nimport SignIn from './components/SignIn/SignIn.js'\nimport Register from './components/Register/Register.js'\nimport Logo from './components/Logo/Logo.js'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport Rank from './components/Rank/Rank.js';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport './App.css';\n\n\nconst app = new Clarifai.App({\n\n    apiKey: \"771a12bc39784c12ad9628465629a3ba\"\n});\n\n\nconst particlesOptions = {\n        \n        \"particles\": {\n\t        \"number\": {\n\t            \"value\": 100\n\t        },\n\t        \"size\": {\n\t            \"value\": 3\n\t        }\n\t    },\n\t    \"interactivity\": {\n\t        \"events\": {\n\t            \"onhover\": {\n\t                \"enable\": true,\n\t                \"mode\": \"repulse\"\n\t            }\n\t        }\n\t    }\n        \n    \n}\n      \n\nclass App extends Component {\n    \n    constructor(){\n        \n        super();\n        this.state = {\n            \n            input: \"\",\n            imageUrl:\"\",\n            boxes: [],\n            route: \"SignIn\",\n            isSignedIn: false,\n        }\n    }\n    \n\n\n    calculateFaceLocation = (data) => {\n        const image = document.getElementById(\"inputimage\");\n        const width = Number(image.width);\n        const height = Number(image.height);\n\n       return data.outputs[0].data.regions.map(face =>  {\n        const clarifaiFace = face.region_info.bounding_box;\n        \n        return {\n           leftCol: clarifaiFace.left_col * width, \n           topRow: clarifaiFace.top_row * height,\n           rightCol: width - (clarifaiFace.right_col * width),\n           bottomRow: height - (clarifaiFace.bottom_row * height)\n\n                }\n\n    });\n}\n\n    displayFaceBox = (boxes) => {\n        this.setState({boxes: boxes})\n        const data = boxes.toString();\n        const arrays = data.split(\"\");\n        const objects = arrays.reduce((total, currentValue) => {\n            return total + currentValue;     \n        }, 0)\n        console.log(objects)\n        const answer = objects.map(element => {\n           return element + 1;\n        })\n        console.log(answer)\n       \n    }\n\n    // showFacesDetected = (boxes) => {\n    //     const answer = boxes.reduce((total, currentItem) => {\n    //        return total + currentItem\n    //     }, 0)\n    //     console.log(answer)\n    // }\n    \n    onInputChange = (event) => {\n        \n       this.setState({input:event.target.value}) \n    }\n    \n    \n\n    \n    onButtonSubmit = () => {\n        \n        this.setState({imageUrl: this.state.input});\n        app.models\n        .predict(\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input)\n        .then((response) => {\n            // console.log(response)\n         this.displayFaceBox(this.calculateFaceLocation(response))\n        })\n\n        .catch((err) => {\n         console.log(err);\n        })\n\n  \n\n        };  \n\n    onReturn = (event) => {\n        \n        if (event.key === \"Enter\") {\n            this.onButtonSubmit()\n    \n                \n         }\n            \n        }\n\n    onRouteChange = (route) => {\n\n        if (route === \"signout\") {\n            \n            this.setState({isSignedIn: false})\n            \n\n        } else if (route === \"home\"){\n            this.setState({isSignedIn: true})\n\n        } \n            \n        this.setState({route: route});\n        \n    }\n\n\n    \n    \n    render(){\n        const {isSignedIn, imageUrl, route, boxes} = this.state;\n\n  return (\n    <div className=\"App\">\n     \n   <Particles className=\"particles\"\n              params={particlesOptions}\n            />\n \n     <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n     { route === \"home\"  \n     ? <div> \n     <Logo />\n     <Rank />\n     <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} onReturn={this.onReturn} />\n     <FaceRecognition boxes={boxes} imageUrl={imageUrl}/>\n     </div> \n\n    : ( \n        route === \"SignIn\" ? <SignIn onRouteChange={this.onRouteChange}/>\n       : route === \"signout\" ? <SignIn onRouteChange={this.onRouteChange}/>\n       : <Register onRouteChange={this.onRouteChange}/>\n    //    : <Register onRouteChange={this.onRouteChange}/>\n        \n  )\n     \n     }\n    </div>\n  );\n}}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}